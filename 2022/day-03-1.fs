S" day-03-input.txt" OPEN-BLOCKS

VARIABLE BLOCK-NUMBER   ( CURRENT, NOT NEXT, BLOCK NUMBER. )
VARIABLE BLOCK-START
VARIABLE BLOCK-POS

0 BLOCK-NUMBER !
0 BLOCK DUP BLOCK-START ! BLOCK-POS !

( IF AT THE END OF THE BLOCK, FETCH THE NEXT ONE. )
: ENSURE-BLOCK ( -- )
    BLOCK-POS @ BLOCK-START @ - 1024 =  ( END? )
    IF
	BLOCK-NUMBER @ 1+ DUP           ( NUM+1 NUM+1 )
	BLOCK DUP                       ( NUM+1 START START )
	BLOCK-START ! BLOCK-POS ! BLOCK-NUMBER !
    THEN
;

: PEEK-CHAR ( -- CHAR ) ENSURE-BLOCK BLOCK-POS @ C@ ;
: GET-CHAR ( -- CHAR )
    ENSURE-BLOCK
    BLOCK-POS DUP @ DUP C@ ( @POS POS CHAR )
    SWAP 1+ ROT !
;
: ?NOT-EOF ( -- FLAG ) PEEK-CHAR 26 = 0= ;

( FETCH THE NEXT LINE OF INPUT, INCLUDING NEWLINE, INTO PAD.  )
( COPY CHARACTER-BY-CHARACTER TO HANDLE THE END OF THE BLOCK. )
( ASSUME NOT AT EOF.  RETURNS FALSE FOR BLANK LINES.          )
( THE COUNT NOT INCLUDING THE NEWLINE IS IN THE FIRST         )
( CHARACTER POSITION.                                         )
: GET-NEXT-LINE ( -- FLAG )
    PAD 1+                        ( DST )
    BEGIN
	GET-CHAR DUP 10 = 0=      ( DST CHAR NOT-CR? )
    WHILE
	    OVER C! 1+            ( DST+1 )
    REPEAT
    OVER C!  ( WRITE THE CR AS WELL )
    PAD 1+ - DUP  ( COUNT COUNT )
    PAD C! 0 >  ( STORE THE COUNT, RETURN THE FLAG )
;


( FIND THE COMMON CHARACTER IN THE FIRST AND SECOND HALF OF THE )
( PACKED STRING AT PAD.                                         )
: COMMON ( -- C )
    PAD DUP C@ SWAP 1+  ( LEN PAD+1 )
    OVER 2 / 0 SWAP 0   ( LEN PAD+1 FALSE LEN/2 0 )
    DO
	( LEN PAD+1 ?FOUND )
	IF
	    I 1 - LEAVE
	ELSE
	    OVER 0 SWAP DUP 2 /  ( LEN PAD+1 FALSE LEN LEN/2 )
	    DO
		DROP  ( DROP THE FOUND FLAG )
		DUP J + C@ OVER I + C@ =  ( LEN PAD+1 CJ CI )
		IF -1 LEAVE ELSE 0 THEN   ( LEN PAD+1 ?FOUND )
	    LOOP
	THEN
    LOOP
    ( IF WE LEFT THE INNER LOOP ON THE LAST ITERATION OF THE OUTER )
    ( LOOP WE WILL NOT HAVE SET THE INDEX.                         )
    ( LEN PAD+1 INDEX/-1 )
    DUP 0<
    IF
	DROP OVER 2 / 1 -
    THEN
    + C@ SWAP DROP
;

( MAP A CHARACTER TO ITS PRIORITY. )
: PRIORITY ( C -- N )
    ( LOWERCASE 'A' IS ASCII 97 AND UPPERCASE 'A' IS 65.  PRIORITY )
    ( OF UPPERCASE 'A' SHOULD BE 27 SO SUBTRACT 38=65-27 FROM      )
    ( UPPERCASE CHARACTERS.                                        )
    DUP 96 >  ( C ?LOWERCASE )
    IF 96 ELSE 38 THEN
    -
;

VARIABLE TOTAL
0 TOTAL !

: RUN ( -- )
    BEGIN
	?NOT-EOF
    WHILE
	    GET-NEXT-LINE DROP  ( DROP THE FLAG, ASSUME IT SUCCEEDS )
	    COMMON PRIORITY TOTAL +!
    REPEAT
;

RUN
TOTAL @ . CR
BYE
